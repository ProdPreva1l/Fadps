plugins {
    id 'java'
    id 'io.github.goooler.shadow' version '8.1.8'
}

group = 'info.preva1l'
version = '1.0'

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
    maven { url "https://repo.papermc.io/repository/maven-public/" }
    maven { url "https://oss.sonatype.org/content/groups/public/" }
    maven { url "https://maven.enginehub.org/repo/" }
    maven { url "https://repo.extendedclip.com/content/repositories/placeholderapi/" }
}

dependencies {
    compileOnly "io.papermc.paper:paper-api:1.20.6-R0.1-SNAPSHOT"

    implementation 'com.github.Carleslc.Simple-YAML:Simple-Yaml:1.8.4'

    implementation 'com.zaxxer:HikariCP:5.1.0'
    compileOnly 'org.xerial:sqlite-jdbc:3.45.2.0'

    compileOnly "me.clip:placeholderapi:2.11.6"
    compileOnly "com.sk89q.worldedit:worldedit-bukkit:7.3.3"

    compileOnly 'org.jetbrains:annotations:24.0.0'
    compileOnly 'org.projectlombok:lombok:1.18.32'
    annotationProcessor 'org.projectlombok:lombok:1.18.32'
    annotationProcessor 'org.jetbrains:annotations:24.0.0'
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

shadowJar {
    destinationDirectory.set(file("$rootDir/target"))
    archiveClassifier.set('')
    minimize()
}

jar.dependsOn shadowJar
clean.delete "$rootDir/target"
logger.lifecycle("Building Fadps ${version}")